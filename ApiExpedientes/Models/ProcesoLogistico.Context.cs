//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiExpedientes.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProcesoLogisticoEntities : DbContext
    {
        public ProcesoLogisticoEntities()
            : base("name=ProcesoLogisticoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categorias { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<CodigoSap> CodigoSaps { get; set; }
        public virtual DbSet<Contacto> Contactoes { get; set; }
        public virtual DbSet<Documento> Documentoes { get; set; }
        public virtual DbSet<Financiamiento> Financiamientoes { get; set; }
        public virtual DbSet<GrupoPersona> GrupoPersonas { get; set; }
        public virtual DbSet<Inconsistencia> Inconsistencias { get; set; }
        public virtual DbSet<LineaProducto> LineaProductoes { get; set; }
        public virtual DbSet<Moneda> Monedas { get; set; }
        public virtual DbSet<Pai> Pais { get; set; }
        public virtual DbSet<Privilegio> Privilegios { get; set; }
        public virtual DbSet<Proveedor> Proveedors { get; set; }
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Rol_Privilegio> Rol_Privilegio { get; set; }
        public virtual DbSet<Segmento> Segmentoes { get; set; }
        public virtual DbSet<SolicitudCredito> SolicitudCreditoes { get; set; }
        public virtual DbSet<TipoFiscal> TipoFiscals { get; set; }
        public virtual DbSet<TipoIndustria> TipoIndustrias { get; set; }
        public virtual DbSet<TipoPago> TipoPagoes { get; set; }
        public virtual DbSet<User_Rol> User_Rol { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual int SP_USUARIO_INSERT(string userName, string password, string firstName, string lastName, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate, Nullable<int> createdBy, Nullable<int> modifiedBy)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var modifiedByParameter = modifiedBy.HasValue ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_USUARIO_INSERT", userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, createdDateParameter, modifiedDateParameter, createdByParameter, modifiedByParameter);
        }
    }
}
